{"version":3,"sources":["serviceWorker.ts","config.ts","auth/Auth.js","components/Callback.tsx","components/Group.tsx","api/groups-api.ts","components/GroupsList.tsx","api/images-api.ts","components/CreateImage.tsx","components/UdagramImage.tsx","components/ImagesList.tsx","components/NotFound.tsx","components/CreateGroup.tsx","App.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","concat","authConfig","domain","clientId","callbackUrl","returnTo","Auth","history","Object","classCallCheck","this","auth0","WebAuth","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","_this","parseHash","err","authResult","accessToken","idToken","console","log","setSession","replace","alert","error","localStorage","setItem","expiresAt","expiresIn","Date","getTime","_this2","checkSession","error_description","removeItem","return_to","origin","Callback","react_default","a","createElement","Dimmer","active","Loader","content","Group","_React$PureComponent","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","Card","Content","Header","react_router_dom","to","props","group","groupId","name","Description","description","React","getGroups","_getGroups","_callee","response","result","regenerator_default","wrap","_context","prev","next","fetch","sent","json","abrupt","items","stop","createGroup","_x","_x2","_createGroup","_callee2","newGroup","reply","_context2","method","headers","Content-Type","Authorization","body","JSON","stringify","newItem","GroupsList","_getPrototypeOf2","_len","length","args","Array","_key","call","state","groups","handleCreateGroup","push","_componentDidMount","asyncToGenerator","mark","setState","t0","message","Button","primary","size","className","onClick","Divider","clearing","map","Group_Group","getImages","_getImages","createImage","_x3","_createImage","newImage","title","uploadFile","_x4","_x5","_uploadFile","_callee3","uploadUrl","file","_context3","UploadState","UdagramImage","fluid","color","image","timestamp","imageUrl","Image","src","ImagesList","images","handleCreateImage","params","UdagramImage_UdagramImage","imageId","NotFound","CreateImage","undefined","uploadState","NoUpload","handleTitleChange","event","target","handleFileChange","files","handleSubmit","_ref","uploadInfo","preventDefault","setUploadState","UploadingData","auth","UploadingFile","finish","Form","onSubmit","Field","placeholder","onChange","type","accept","renderButton","loading","CreateGroup","uploadingGroup","handleNameChange","handleDescriptionChange","App","handleLogin","assertThisInitialized","handleLogout","Segment","style","padding","vertical","Grid","container","stackable","verticalAlign","Row","Column","width","react_router","generateMenu","generateCurrentPage","Menu","Item","position","logInLogOutButton","path","exact","render","CreateGroup_CreateGroup","assign","component","CreateImage_CreateImage","Component","createHistory","ReactDOM","test","hash","components_Callback","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da47207a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const apiId = 'vvmqjunhnj'\nconst region = 'us-east-2'\nexport const apiEndpoint = `https://${apiId}.execute-api.${region}.amazonaws.com/dev`\n\nexport const authConfig = {\n  domain: 'dev-aqymclse.us.auth0.com',\n  clientId: 'tGQeMM5L1qHMeRDa4c55OayQKSC8SAjS',\n  callbackUrl: 'http://localhost:3000/callback',\n  returnTo:  'http://localhost:3000'\n}\n","import auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor(history) {\n    this.history = history\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult);\n      } else if (err) {\n        this.history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nfunction Callback() {\n  return (\n    <Dimmer active>\n      <Loader content=\"Loading\" />\n    </Dimmer>\n  )\n}\n\nexport default Callback\n","import * as React from 'react'\nimport { Card } from 'semantic-ui-react'\nimport { GroupModel } from '../types/GroupModel'\nimport { Link } from 'react-router-dom'\n\ninterface GroupCardProps {\n  group: GroupModel\n}\n\ninterface GroupCardState {\n}\n\nexport class Group extends React.PureComponent<GroupCardProps, GroupCardState> {\n\n  render() {\n    return (\n      <Card>\n        <Card.Content>\n          <Card.Header>\n            <Link to={`/images/${this.props.group.groupId}`}>{this.props.group.name}</Link>\n          </Card.Header>\n          <Card.Description>{this.props.group.description}</Card.Description>\n        </Card.Content>\n      </Card>\n    )\n  }\n}\n","import { GroupModel } from '../types/GroupModel'\nimport { apiEndpoint } from '../config'\nimport { GroupUploadInfo } from '../types/GroupUploadInfo'\n\nexport async function getGroups(): Promise<GroupModel[]> {\n  console.log('Fetching groups')\n\n  const response = await fetch(`${apiEndpoint}/groups`)\n  const result = await response.json()\n\n  return result.items\n}\n\nexport async function createGroup(\n  idToken: string,\n  newGroup: GroupUploadInfo\n): Promise<GroupModel> {\n  const reply = await fetch(`${apiEndpoint}/groups`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    },\n    body: JSON.stringify({\n      name: newGroup.name,\n      description: newGroup.description\n    })\n  })\n  const result = await reply.json()\n  return result.newItem\n}\n","import * as React from 'react'\nimport { GroupModel } from '../types/GroupModel'\nimport { Group } from './Group'\nimport { getGroups } from '../api/groups-api'\nimport { Card, Button, Divider } from 'semantic-ui-react'\nimport { History } from 'history'\n\ninterface GroupsListProps {\n  history: History\n}\n\ninterface GroupsListState {\n  groups: GroupModel[]\n}\n\nexport class GroupsList extends React.PureComponent<GroupsListProps, GroupsListState> {\n  state: GroupsListState = {\n    groups: []\n  }\n\n  handleCreateGroup = () => {\n    this.props.history.push(`/groups/create`)\n  }\n\n  async componentDidMount() {\n    try {\n      const groups = await getGroups()\n      this.setState({\n        groups\n      })\n    } catch (e) {\n      alert(`Failed to fetch groups: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Groups</h1>\n\n        <Button\n          primary\n          size=\"huge\"\n          className=\"add-button\"\n          onClick={this.handleCreateGroup}\n        >\n          Create new group\n        </Button>\n\n        <Divider clearing />\n\n        <Card.Group>\n          {this.state.groups.map(group => {\n            return <Group key={group.groupId} group={group} />\n          })}\n        </Card.Group>\n      </div>\n    )\n  }\n}\n","import { apiEndpoint } from '../config'\nimport { ImageModel } from '../types/ImageModel'\nimport { ImageUploadInfo } from '../types/ImageUploadInfo'\nimport { ImageUploadResponse } from '../types/ImageUploadResponse'\n\nexport async function getImages(groupId: string): Promise<ImageModel[]> {\n  console.log('Fetching images')\n  const response = await fetch(`${apiEndpoint}/groups/${groupId}/images`)\n  const result = await response.json()\n\n  return result.items\n}\n\nexport async function createImage(\n  idToken: string,\n  newImage: ImageUploadInfo\n): Promise<ImageUploadResponse> {\n\n  const reply = await fetch(\n    `${apiEndpoint}/groups/${newImage.groupId}/images`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${idToken}`\n      },\n      body: JSON.stringify({\n        title: newImage.title\n      })\n    }\n  )\n\n  return await reply.json()\n}\n\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\n  await fetch(uploadUrl, {\n    method: 'PUT',\n    body: file\n  })\n}\n","import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport { createImage, uploadFile } from '../api/images-api'\nimport Auth from '../auth/Auth'\n\nenum UploadState {\n  NoUpload,\n  UploadingData,\n  UploadingFile,\n}\n\ninterface CreateImageProps {\n  match: {\n    params: {\n      groupId: string\n    }\n  }\n  auth: Auth\n}\n\ninterface CreateImageState {\n  title: string\n  file: any\n  uploadState: UploadState\n}\n\nexport class CreateImage extends React.PureComponent<\n  CreateImageProps,\n  CreateImageState\n> {\n  state: CreateImageState = {\n    title: '',\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ title: event.target.value })\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    console.log('File change', files)\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.UploadingData)\n      const uploadInfo = await createImage(this.props.auth.getIdToken(), {\n        groupId: this.props.match.params.groupId,\n        title: this.state.title\n      })\n\n      console.log('Created image', uploadInfo)\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadInfo.uploadUrl, this.state.file)\n\n      alert('Image was uploaded!')\n    } catch (e) {\n      alert('Could not upload an image: ' + e.message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>Title</label>\n            <input\n              placeholder=\"Image title\"\n              value={this.state.title}\n              onChange={this.handleTitleChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Image</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n\n    return (\n      <div>\n        {this.state.uploadState === UploadState.UploadingData && <p>Uploading image metadata</p>}\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport { Card, Image } from 'semantic-ui-react'\nimport { ImageModel } from '../types/ImageModel'\n\ninterface ImageCardProps {\n  image: ImageModel\n}\n\ninterface ImageCardState {}\n\nexport class UdagramImage extends React.PureComponent<\n  ImageCardProps,\n  ImageCardState\n> {\n\n  render() {\n    return (\n      <Card fluid color=\"red\">\n        <Card.Content>\n          <Card.Header>{this.props.image.title}</Card.Header>\n          <Card.Description>{this.props.image.timestamp}</Card.Description>\n          {this.props.image.imageUrl && (\n            <Image src={this.props.image.imageUrl} />\n          )}\n        </Card.Content>\n      </Card>\n    )\n  }\n}\n","import * as React from 'react'\nimport { ImageModel } from '../types/ImageModel'\nimport { getImages } from '../api/images-api'\nimport { Card, Divider, Button } from 'semantic-ui-react'\nimport { UdagramImage } from './UdagramImage'\nimport { History } from 'history'\n\ninterface ImagesListProps {\n  history: History\n  match: {\n    params: {\n      groupId: string\n    }\n  }\n}\n\ninterface ImagesListState {\n  images: ImageModel[]\n}\n\nexport class ImagesList extends React.PureComponent<\n  ImagesListProps,\n  ImagesListState\n> {\n  state: ImagesListState = {\n    images: []\n  }\n\n  handleCreateImage = () => {\n    this.props.history.push(`/images/${this.props.match.params.groupId}/create`)\n  }\n\n  async componentDidMount() {\n    try {\n      const images = await getImages(this.props.match.params.groupId)\n      this.setState({\n        images\n      })\n    } catch (e) {\n      alert(`Failed to fetch images for group : ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Images</h1>\n\n        <Button\n          primary\n          size=\"huge\"\n          className=\"add-button\"\n          onClick={this.handleCreateImage}\n        >\n          Upload new image\n        </Button>\n\n        <Divider clearing />\n\n        <Card.Group>\n          {this.state.images.map(image => {\n            return <UdagramImage key={image.imageId} image={image} />\n          })}\n        </Card.Group>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Not Found</h1>\n  }\n}\n","import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport { createGroup } from '../api/groups-api'\nimport Auth from '../auth/Auth'\n\ninterface CreateGroupProps {\n  auth: Auth\n}\n\ninterface CreateGroupState {\n  name: string\n  description: string\n  uploadingGroup: boolean\n}\n\nexport class CreateGroup extends React.PureComponent<\n  CreateGroupProps,\n  CreateGroupState\n> {\n  state: CreateGroupState = {\n    name: '',\n    description: '',\n    uploadingGroup: false\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value })\n  }\n\n  handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ description: event.target.value })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.name || !this.state.description) {\n        alert('Name and description should be provided')\n        return\n      }\n\n      this.setUploadState(true)\n      const group = await createGroup(this.props.auth.getIdToken(), {\n        name: this.state.name,\n        description: this.state.description\n      })\n\n      console.log('Created description', group)\n\n      alert('Group was created!')\n    } catch (e) {\n      alert('Could not upload an image: ' + e.message)\n    } finally {\n      this.setUploadState(false)\n    }\n  }\n\n  setUploadState(uploadingGroup: boolean) {\n    this.setState({\n      uploadingGroup\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new group</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              placeholder=\"Group name\"\n              value={this.state.name}\n              onChange={this.handleNameChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Description</label>\n            <input\n              placeholder=\"Group description\"\n              value={this.state.description}\n              onChange={this.handleDescriptionChange}\n            />\n          </Form.Field>\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n    return (\n      <Button loading={this.state.uploadingGroup} type=\"submit\">\n        Create\n      </Button>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { GroupsList } from './components/GroupsList'\nimport { Router, Link, Route, Switch } from 'react-router-dom'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\nimport { ImagesList } from './components/ImagesList'\nimport { NotFound } from './components/NotFound'\nimport { CreateImage } from './components/CreateImage'\nimport { CreateGroup } from './components/CreateGroup'\nimport Auth from './auth/Auth'\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  auth: Auth\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogin() {\n    this.props.auth.login()\n  }\n\n  handleLogout() {\n    this.props.auth.logout()\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment style={{ padding: '8em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </div>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"home\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">{this.logInLogOutButton()}</Menu.Menu>\n      </Menu>\n    )\n  }\n\n  logInLogOutButton() {\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\n          Log Out\n        </Menu.Item>\n      )\n    } else {\n      return (\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\n          Log In\n        </Menu.Item>\n      )\n    }\n  }\n\n  generateCurrentPage() {\n    return (\n      <Switch>\n        <Route\n          path=\"/groups/create\"\n          exact\n          render={props => {\n            return <CreateGroup {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route path=\"/images/:groupId\" exact component={ImagesList} />\n\n        <Route\n          path=\"/images/:groupId/create\"\n          exact\n          render={props => {\n            return <CreateImage {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route path=\"/\" exact component={GroupsList} />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport Auth from './auth/Auth'\nimport { Router, Route } from 'react-router-dom'\nimport Callback from './components/Callback'\nimport createHistory from 'history/createBrowserHistory'\nimport App from './App';\nconst history = createHistory()\n\nconst auth = new Auth(history)\n\nconst handleAuthentication = (props: any) => {\n  const location = props.location\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication()\n  }\n}\n\nexport const makeAuthRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          path=\"/callback\"\n          render={props => {\n            handleAuthentication(props)\n            return <Callback />\n          }}\n        />\n        <Route\n          render={props => {\n            return <App auth={auth} {...props} />\n          }}\n        />\n        {/* <Route path=\"/\" render={(props) => <App auth={auth} {...props} />} />\n          <Route path=\"/home\" render={(props) => <Home auth={auth} {...props} />} /> */}\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}